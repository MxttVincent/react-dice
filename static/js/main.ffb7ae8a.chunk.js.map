{"version":3,"sources":["components/dice.js","index.js"],"names":["Dice","props","state","diceSideCount","console","log","this","diceSkin","className","diceClass","id","React","Component","DiceArea","getDiceRoll","diceRolling","setState","fetch","then","res","json","rollResult","result","error","handleModalClick","evt","modalState","target","replace","diceCount","onClick","rolling","rollStatus","ReactDOM","render","document","getElementById"],"mappings":"6LAgDeA,G,uDAzCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,cAAe,GAHL,E,qDASd,OADAC,QAAQC,IAAIC,KAAKL,MAAMM,UAEnB,qBAAKC,UAAU,gBAAf,SACI,sBACAA,UAAWF,KAAKL,MAAMQ,UAAY,QAGlCC,GAAG,cAJH,UAKI,qBACIF,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,UACzD,qBACIC,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,UACzD,qBACIC,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,UACzD,qBACIC,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,UACzD,qBACIC,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,UACzD,qBACIC,UAAW,YAAcF,KAAKL,MAAMM,SACpCG,GAA4B,YAAxBJ,KAAKL,MAAMM,SAAyB,WAAa,mB,GAnC1DI,IAAMC,YCAnBC,E,kDAEJ,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAYRa,YAAc,WACP,EAAKZ,MAAMa,cACd,EAAKC,SAAS,CAAED,aAAa,IAE7BE,MAAM,kCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAEC,SAACE,GAAW,EAAKJ,SAAS,CACxBK,WAAYD,EAAKE,OACjBb,UAAW,OAASW,EAAKE,OACzBP,aAAa,OAIf,SAACQ,GAAY,EAAKP,SAAS,CACzBK,WAAY,8BAA+BE,eA7BhC,EAsCnBC,iBAAmB,SAACC,GAClB,EAAKT,SAAS,CACZU,WAAY,cACZnB,SAAUkB,EAAIE,OAAOjB,GAAGkB,QAAQ,SAAU,OAvC5C,EAAK1B,MAAQ,CACXmB,WAAY,gBACZQ,UAAW,EACX1B,cAAe,EACfM,UAAW,UACXM,aAAa,EACbR,SAAU,UACVmB,WAAY,WATG,E,qDAiDT,IAAD,OACP,OACE,sBAAKlB,UAAU,MAAf,UACE,+BACE,8CAEA,qBAAKE,GAAG,aAAaoB,QAASxB,KAAKQ,YAAnC,SACE,uCAGF,qBAAKJ,GAAG,eAAeoB,QAAS,WAAQ,EAAKd,SAAS,CAAEU,WAAY,iBAApE,SACE,iDAIJ,qBAAKhB,GAAG,QAAQoB,QAASxB,KAAKkB,iBAAkBhB,UAAWF,KAAKJ,MAAMwB,WAAtE,SACE,sBAAKhB,GAAG,aAAR,UACE,qBAAKA,GAAG,oBACR,qBAAKA,GAAG,oBACR,qBAAKA,GAAG,uBAGZ,qBAAKA,GAAG,WAAR,SAEI,cAAC,EAAD,CACED,UAAWH,KAAKJ,MAAMO,UACtBsB,QAASzB,KAAK0B,WACdzB,SAAUD,KAAKJ,MAAMK,oB,GA9EZI,IAAMC,WAuF7BqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.ffb7ae8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\n//Resource used: https://3dtransforms.desandro.com/cube\r\n\r\nclass Dice extends React.Component {\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            diceSideCount: 6\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.diceSkin)\r\n        return (\r\n            <div className=\"diceContainer\">\r\n                <div \r\n                className={this.props.diceClass + \" dice\"}\r\n                //Animation end not always firing - dice gets stuck and won't roll again\r\n                // onAnimationEnd={() => {this.props.rolling(false)}}\r\n                id=\"diceElement\">\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face1red\" : \"face1\"} />\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face2red\" : \"face2\"} />\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face3red\" : \"face3\"} />\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face4red\" : \"face4\"} />\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face5red\" : \"face5\"} />\r\n                    <div \r\n                        className={\"diceFace \" + this.props.diceSkin} \r\n                        id={this.props.diceSkin === \"redSkin\" ? \"face6red\" : \"face6\"} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dice;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dice from './components/dice';\n\nclass DiceArea extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      rollResult: \"Roll the die!\",\n      diceCount: 1,\n      diceSideCount: 6,\n      diceClass: \"default\",\n      diceRolling: false,\n      diceSkin: \"redSkin\",\n      modalState: \"initial\",\n    };\n  }\n\n  getDiceRoll = () => {\n    if (!this.state.diceRolling) {\n      this.setState({ diceRolling: true });\n      //URL Params: 1d6 means one roll of a dice with 6 sides\n      fetch(\"https://rolz.org/api/?1d6.json\")\n      .then(res => res.json())\n      .then(\n        //Result returns the total but is suitable for a single die roll\n        (json) => { this.setState({\n          rollResult: json.result,\n          diceClass: \"show\" + json.result,\n          diceRolling: false\n        });\n      },\n        //Catch errors\n        (error) => { this.setState({\n          rollResult: \"Error reaching rolling API:\", error\n        })},\n      );\n\n      //Fallback as onAnimationEnd doesn't appear to fire consistently - computedStyle remains as running\n      //setTimeout(() => this.setState({ diceRolling: false }), 1200);\n    }\n  }\n\n  handleModalClick = (evt) => {\n    this.setState({\n      modalState: \"hiddenModal\",\n      diceSkin: evt.target.id.replace(\"Choice\", \"\")\n    });\n  }\n\n  // rollStatus = (active) => {\n  //   this.setState({ diceRolling: active });\n  // }\n  \n  render() {\n    return (\n      <div className=\"app\">\n        <h1>\n          <p>Roll the die!</p>\n\n          <div id=\"rollButton\" onClick={this.getDiceRoll}>\n            <p>Roll</p>\n          </div>\n\n          <div id=\"reskinButton\" onClick={() => { this.setState({ modalState: \"activeModal\" }) }}>\n            <p>Change Skin</p>\n          </div>\n        </h1>\n\n        <div id=\"modal\" onClick={this.handleModalClick} className={this.state.modalState}>\n          <div id=\"innerModal\">\n            <div id=\"whiteSkinChoice\"></div>\n            <div id=\"blackSkinChoice\"></div>\n            <div id=\"redSkinChoice\"></div>\n          </div>\n        </div>\n        <div id=\"diceArea\">\n            {/* Rolling prop not used until animation end figured out */}\n            <Dice \n              diceClass={this.state.diceClass} \n              rolling={this.rollStatus}\n              diceSkin={this.state.diceSkin}\n            />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(\n    <DiceArea />,\n  document.getElementById('root')\n);"],"sourceRoot":""}